<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	    <context:component-scan base-package="com.kh.tt"/>
	
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 
		* root-context.xml
		서버구동과 동시네 web.xml을 거쳐서 바로 로딩되는 문서
		=> 서버구동과 동시에 바로 셋팅(빈으로 등록 = 객체 생성을 스프링 너가 해라 (객체 = 클래스로 만드는거) (빈으로 등록 == 클래스를 등록) 
		해야되는 내용들을 작성하면 됨
		   주로 db연결 설정, 트랜젝션 처리, 내외부 모듈 연동 등등
	 -->
	 
	 <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<!--<property name="url" value="jdbc:oracle:thin:@192.168.20.49:1521:xe"/>--> 
	 	  <property name="url" value="jdbc:oracle:thin:@localhost:1521/XEPDB1"/>  
	 	<property name="username" value="tt"/>
	 	<property name="password" value="tt"/>
	 </bean>
	 
	 <!-- 
         BasicDataSource dataSource = new BasicDataSource();
         dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
         dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe")
         dataSource.setUsername("spring");
         dataSource.setPassword("spring");
      -->
      
      <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
      	<property name="configLocation" value="classpath:mybatis-config.xml"/>
      	<property name="dataSource" ref="dataSource"/>
      </bean>
      
      <!-- 
      	classpath:mybatis-config.xml -> 소스폴더 안에있는 mybatis-config.xml 읽기
      	
      	SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
      	sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
      	sqlSessionFactory.setDataSource(dataSource);
       -->
       
       <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
       	 	<constructor-arg ref="sqlSessionFactory"/>
       </bean>
       
       <!-- 
       		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
        -->
        
        <!-- 
        	property : setter 주입
        	constructor-arg : 생성자 주입
         -->
         
         <!-- 파일업로드 관련 빈 등록 -->
         <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
         	<property name="maxUploadSize" value="100000000"/>
         	<property name="maxInMemorySize" value="100000000" />
         </bean>
</beans>
